# Main entrypoint of the workflow. 
# Please follow the best practices: 
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there. 
import os 
configfile: "config/config.yaml"

def get_all_out():
    all_out = []
    accessions = []
    result_out = 'results/all/'
    with open('.test/example_data/test_accessions.txt','r') as fh:
        for i in fh:
            
          accessions.append(i.rstrip())
          check_point = f"{i.rstrip()}/{i.rstrip()}_done"
          all_out.append(os.path.join(result_out,check_point))

    return (all_out, accessions)

scattergather:
    split=workflow.cores

out_files, ACCESSIONS =  get_all_out()

# rule all
rule all:
  input: 
      expand('results/all/{accession}/{accession}_done', accession=ACCESSIONS)
	     

# rule efetch
rule efetch:
  input:
	    ".test/example_data/test_accessions.txt"
  output:
	    "results/tmp/downloaded_data.fna"
  conda: 
	    "envs/download.yaml"
  shell: 
      "python3 scripts/efetch_fasta.py < {input} > {output}"

# rename_fasta_records
rule rename_fasta_records:
  # Renames the record names in the multi-fasta to avoid problems 
  # with whitespaces or too long names in certain tools.
  # Creates a backup of the original record names: .bak file.
  input:
  	"results/tmp/downloaded_data.fna"
  output:
  	"results/tmp/accessions_renamed.fna"
  shell:
  	"sed 's/\.[0-9].*//g' {input} > {output}"

# rule split_multifasta
rule split_multifasta:
  input: "results/tmp/downloaded_data.fna"
  output: expand("results/fasta/{accession}.fna", accession=ACCESSIONS)
  conda:
        "envs/python.yaml"
  shell:
        "python3 ./scripts/split_multifasta.py {input} {output}"

# rule pharokka:
rule pharokka:
  input: 
    "results/fasta/{accession}.fna"
  output: 
    "results/all/{accession}/{accession}_done"
  params:
    out_path = "results/all/{accession}"

  threads: config["threads"]
  log: "workflow/logs/pharokka/{accession}.log"
  conda: "env/pharokka.yaml"
  shell:
	  "pharokka -i {input} -l {{wildcards.accession}} -o {params.out_path} -p {{wildcards.accession}} -t {threads} &> {log} & touch {output}"



