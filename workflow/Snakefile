# Main entrypoint of the workflow. 
# Please follow the best practices: 
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there. 

configfile: "../config.yaml"

# rule all
rule all:
  input: 

# rule efetch
rule efetch:
  input:
  output:
  conda: "../envs/efetch.yaml"
  script: 
      "../scripts/efetch_fasta.py"

# rename_fasta_records
rule rename_fasta_records:
  # Renames the record names in the multi-fasta to avoid problems 
  # with whitespaces or too long names in certain tools.
  # Creates a backup of the original record names: .bak file.
  input:
  	"accessions_original.fasta"
  output:
  	"accessions_renamed.bak"
  shell:
  	"sed 's/\.[0-9].*//g' {input} > {output}"

# rule split_multifasta
rule rsplit_multifasta:
  input: ".test/example_data/{fasta_prefix}.fna"
  output: scatter.split("results/split_fastas/{{fasta_prefix}}/{{fasta_prefix}}.{scatteritem}.fna")
  conda:
        "envs/seqkit.yaml"
  params:
        number_of_parts=workflow.cores,
        dirname=lambda wc, output: os.path.dirname(output[0]),
  shell:
        "seqkit split2 "
        " --by-part {params.number_of_parts} "
        " --out-dir {params.dirname}"
        " {input}; "
        'FILES=( {params.dirname}/*.fna );'
        "for f in ${{FILES[@]}}; "
        "do "
        "  without_suffix=${{f%%.fna}}; "
        "  number=${{without_suffix##*part_}}; "
        "  mv $f ${{f%%.part_*.fna}}.${{number##*0}}-of-{params.number_of_parts}.fna; "
        "done "

# rule pharokka:
rule pharokka:
  input: 
    "{split_fastas}.fasta"
  output: 
    gff_file="{split_fastas}.gff"
    faa_file="{split_fastas}.faa"
  threads: config["threads"]
  log: "workflow/logs/pharokka.log"
  conda: "env/pharokka.yaml"
  shell:
    """
    (tag=${{input}%.fasta};
	  string=${tag##*_};
	  echo $string;
	  pharokka -i {input} -l $string -o $tag -p $tag -t {threads}) &> {log}
    """


