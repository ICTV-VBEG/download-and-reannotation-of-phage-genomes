# Main entrypoint of the workflow. 
# Please follow the best practices: 
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there. 

configfile: "../config.yaml"

# rule all
rule all:
  input: 
	"./results/downloaded_data.fna"

# rule efetch
rule efetch:
  input:
	"../.test/example_data/test_accession.txt"
  output:
	"./results/downloaded_data.fna"
  conda: 
	"./envs/download.yaml"
  script: 
	"./scripts/efetch_fasta.py < {input} > {output}"

# rename_fasta_records
rule rename_fasta_records:
  # Renames the record names in the multi-fasta to avoid problems 
  # with whitespaces or too long names in certain tools.
  # Creates a backup of the original record names: .bak file.
  input:
  	"./results/downloaded_data.fna"
  output:
  	"./results/accessions_renamed.fna"
  shell:
  	"sed 's/\.[0-9].*//g' {input} > {output}"

# rule split_multifasta
rule split_multifasta:
  input: "./results/downloaded_data.fna"
  output: scatter.split("./results/split_fastas/{{fasta_prefix}}/{{fasta_prefix}}.{scatteritem}.fna")
  conda:
        "envs/seqkit.yaml"
  params:
        number_of_parts=workflow.cores,
        dirname=lambda wc, output: os.path.dirname(output[0]),
  shell:
        "seqkit split2 "
        " --by-part {params.number_of_parts} "
        " --out-dir {params.dirname}"
        " {input}; "
        'FILES=( {params.dirname}/*.fna );'
        "for f in ${{FILES[@]}}; "
        "do "
        "  without_suffix=${{f%%.fna}}; "
        "  number=${{without_suffix##*part_}}; "
        "  mv $f ${{f%%.part_*.fna}}.${{number##*0}}-of-{params.number_of_parts}.fna; "
        "done "

# rule pharokka:
rule pharokka:
  input: 
    "../results/split_output/{split_fastas}.fasta"
  output: 
    "../results/{split_fastas}"
  threads: config["threads"]
  log: "workflow/logs/pharokka.log"
  conda: "env/pharokka.yaml"
  shell:
	  "pharokka -i {input} -l {{wildcards.split_fastas}##*_} -o {output} -p {wildcards.split_fastas} -t {threads} &> {log}"



